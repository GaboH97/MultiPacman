/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package viewpacman;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Rectangle;
import java.util.ArrayList;
import controller.ControllerClient;
import java.awt.Dimension;
import models.entity.Cookie;
import models.entity.Global;
import models.entity.Pacman;

/**
 *
 * @author USUARIO
 */
public class PanelGame1 extends javax.swing.JPanel {

    /**
     * Creates new form PanelGame1
     */
    ArrayList<Pacman> listPacmans;
    private int angle;
    private ControllerClient controllerClient;
    private Cookie cookie;

    public PanelGame1(ControllerClient controllerClient) {
        this.controllerClient = controllerClient;
        this.setBackground(Color.GRAY);
        setSize(Global.WIDTH, Global.HEIGTH);
        initComponents();
        angle = 45;
        listPacmans = new ArrayList<>();
        this.addKeyListener(controllerClient);
        cookie = new Cookie();

    }

    public ArrayList<Pacman> getListPacmans() {
        return listPacmans;
    }

    public void setListPacmans(ArrayList<Pacman> listPacmans) {
        this.listPacmans = listPacmans;
    }

    public boolean colission(Pacman pacman, Cookie cookie) {
        return new Rectangle(pacman.getCoordinate().x, pacman.getCoordinate().y, 70, 70).intersects(new Rectangle(cookie.getPosition().x, cookie.getPosition().y, 25, 25));
    }

    public void drawCookie(Graphics g) {
        g.setColor(Color.ORANGE);
//        System.out.println(cookie.getPosition().x+"---"+cookie.getPosition().y);
        g.fillOval(cookie.getPosition().x, cookie.getPosition().y, 30, 35);
    }

    public void drawPacmans(Graphics g) {
        int startAngle = 0;
        int arcAngle = 0;
        int eyeX = 0;
        int eyeY = 0;
        if (!listPacmans.isEmpty()) {
            for (int i = 0; i < listPacmans.size(); i++) {
//                System.out.println("angulo "+listPacmans.get(i).getAngulo());
                if (listPacmans.get(i).getDirection() == 1) {
                    startAngle = 60;
                    arcAngle = 250;
                    eyeX = 31;
                    eyeY = 21;
                } else if (listPacmans.get(i).getDirection() == 2) {
                    startAngle = 200;
                    arcAngle = 280;
                    eyeX = 50;
                    eyeY = 21;
                } else if (listPacmans.get(i).getDirection() == 3) {
                    startAngle = 310;
                    arcAngle = 250;
                    eyeX = 53;
                    eyeY = 35;
                }
                if (listPacmans.get(i).getDirection() == 4) {
                    startAngle = 150;
                    arcAngle = 240;
                    eyeX = 25;
                    eyeY = 50;
                }
                g.setColor(listPacmans.get(i).getColor());
                g.fillArc((int) listPacmans.get(i).getCoordinate().getX(), (int) listPacmans.get(i).getCoordinate().getY(),
                        82, 82, startAngle, arcAngle);
                g.setColor(Color.BLACK);
                g.fillOval((int) listPacmans.get(i).getCoordinate().getX() + eyeX,
                        (int) listPacmans.get(i).getCoordinate().getY() + eyeY, 5, 5);
            }
        }
    }

    @Override
    public void paint(Graphics g) {
        super.paint(g);
        drawPacmans(g);
        drawCookie(g);
    }

    public Cookie getCookie() {
        return cookie;
    }

    public void setCookie(Cookie cookie) {
        this.cookie = cookie;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setPreferredSize(new Dimension(Global.WIDTH,Global.HEIGTH)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
